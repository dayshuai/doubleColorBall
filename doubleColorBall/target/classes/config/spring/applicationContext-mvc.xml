<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 使用spring组件扫描 -->
	<context:component-scan base-package="com.doublecolorball.*"/>
	<mvc:annotation-driven />
	<!-- 静态资源 解析 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />   
	<mvc:default-servlet-handler/> 

	<!-- 通过annotation-driven可以替代下边的处理器映射器和适配器 -->
	<!-- <mvc:annotation-driven conversion-service="conversionService"> </mvc:annotation-driven> -->

	<!-- 注解处理器映射器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>


	<!-- 注解适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<!-- 加入 json数据的消息转换器 MappingJacksonHttpMessageConverter依赖Jackson的包 -->
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			</list>
		</property>

	</bean>
	
	<!-- 配置视图的显示 -->  
     <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver"> 
        <property name="cache" value="true" />  
        <property name="prefix" value="/" /><!-- 视图文件的前缀，即存放的路径 -->  
        <property name="suffix" value=".vm" /><!-- 视图文件的后缀名 -->  
        <!--<property name="toolboxConfigLocation" value="/WEB-INF/tools.xml" /><!–toolbox配置文件路径–>-->  
        <property name="dateToolAttribute" value="date" /><!--日期函数名称-->  
        <property name="numberToolAttribute" value="number" /><!--数字函数名称-->  
        <property name="contentType" value="text/html;charset=UTF-8" />  
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->  
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->  
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
        <property name="layoutUrl" value="layout/layout.vm"/>
    </bean>  
	
	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">    
	    <property name="resourceLoaderPath"  value="WEB-INF/velocity/" /><!-- 設置模板防止位置-->    
	    <property name="velocityProperties">    
	        <props>    
	            <prop key="directive.foreach.counter.name">loopCounter</prop>    
	            <prop key="directive.foreach.counter.initial.value">0</prop>    
	            <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->    
	            <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
	            <prop key="velocimacro.library">horn/macro.vm</prop> 
	            <prop key="toolbox.xml.path">WEB-INF/conf/vm-toolbox.xml</prop>    
	        </props>    
	    </property>    
	</bean> 


</beans>